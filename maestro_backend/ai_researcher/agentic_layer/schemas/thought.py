import uuid
from datetime import datetime, timezone
from typing import Optional

from pydantic import BaseModel, Field


def generate_uuid():
    """Generates a unique UUID."""
    return str(uuid.uuid4())

def get_current_utc_timestamp():
    """Returns the current UTC timestamp."""
    return datetime.now(timezone.utc)

class ThoughtEntry(BaseModel):
    """
    Represents a single entry in the thought pad, capturing a concise thought
    or reminder generated by an agent at a specific time.
    """
    thought_id: str = Field(default_factory=generate_uuid, description="Unique identifier for the thought.")
    timestamp: datetime = Field(default_factory=get_current_utc_timestamp, description="Timestamp when the thought was generated (UTC).")
    agent_name: str = Field(..., description="Name of the agent that generated the thought.")
    content: str = Field(..., description="The concise content of the thought.")

    class Config:
        # Example for potential future use if needed with ORMs etc.
        # from_attributes = True
        pass
