from pydantic import BaseModel, Field
from typing import List, Optional

class WritingChangeSuggestion(BaseModel):
    """
    Represents a specific suggestion for revising a section during the writing phase,
    typically generated by a reflection agent after reviewing a draft.
    """
    section_id: str = Field(..., description="The ID of the section or subsection needing revision.")
    issue_description: str = Field(..., description="A clear description of the issue identified (e.g., repetition, lack of clarity, missing transition).")
    suggested_change: str = Field(..., description="Specific guidance on how to address the issue or what content should be added/modified.")
    priority: int = Field(default=1, description="Suggested priority for addressing the change (e.g., 1=High, 2=Medium, 3=Low).")

    class Config:
        schema_extra = {
            "example": {
                "section_id": "lit_review_sub_ai_ethics",
                "issue_description": "The paragraph discussing algorithmic bias feels disconnected from the previous point on data privacy.",
                "suggested_change": "Add a sentence or two to bridge the discussion, perhaps mentioning how data privacy concerns can exacerbate bias issues.",
                "priority": 1
            }
        }

class WritingReflectionOutput(BaseModel):
    """
    Output schema for the agent reflecting on a written draft.
    """
    overall_assessment: str = Field(..., description="A brief overall assessment of the draft's quality, coherence, and adherence to the outline/goals.")
    change_suggestions: List[WritingChangeSuggestion] = Field(default_factory=list, description="A list of specific, actionable suggestions for revision.")
    scratchpad_update: str = Field(..., description="A concise summary of the reflection step to be added to the agent scratchpad.")
    # --- Added field for thought_pad ---
    generated_thought: Optional[str] = Field(None, description="A concise thought or reminder generated by the agent to be added to the thought_pad.")
    # --- End added field ---

    class Config:
        schema_extra = {
            "example": {
                "overall_assessment": "The draft covers the main points well, but flow between sections could be improved, and some repetition exists in the methodology section.",
                "change_suggestions": [
                    {
                        "section_id": "methodology",
                        "issue_description": "Repetitive explanation of the data collection process.",
                        "suggested_change": "Consolidate the description of data collection into the first paragraph and remove the redundant explanation later in the section.",
                        "priority": 1
                    },
                    {
                        "section_id": "conclusion",
                        "issue_description": "Transition from the discussion section is abrupt.",
                        "suggested_change": "Add a sentence at the beginning of the conclusion to summarize the key findings discussed previously before stating the final conclusions.",
                        "priority": 2
                    }
                ],
                "scratchpad_update": "Reviewed draft, identified 2 key issues: repetition in methodology and abrupt transition to conclusion.",
                "generated_thought": "Report needs smoother transitions between sections; methodology section contains redundant information that should be consolidated."
            }
        }
